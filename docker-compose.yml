# Real-time Whisper Subtitles - Docker Compose Configuration
# Universal configuration that works on all systems
# Encoding: UTF-8

services:
  # Main Whisper Application
  whisper-subtitles:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "${PORT:-8000}:8000"
    volumes:
      - ./data/models:/app/data/models
      - ./data/outputs:/app/data/outputs
      - ./data/logs:/app/data/logs
      - ./data/cache:/app/data/cache
    environment:
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-8000}
      - DEBUG=${DEBUG:-false}
      - WHISPER_MODEL=${WHISPER_MODEL:-base}
      - LANGUAGE=${LANGUAGE:-ja}
      - SAMPLE_RATE=${SAMPLE_RATE:-16000}
      - CHUNK_SIZE=${CHUNK_SIZE:-1024}
      - VAD_MODE=${VAD_MODE:-3}
      - MAX_WORKERS=${MAX_WORKERS:-2}
      - BATCH_SIZE=${BATCH_SIZE:-8}
      - MODEL_PATH=/app/data/models
      - OUTPUT_PATH=/app/data/outputs
      - LOG_PATH=/app/data/logs
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - RATE_LIMIT=${RATE_LIMIT:-100}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE:-100}
      - ENABLE_CORS=${ENABLE_CORS:-true}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
      - TZ=${TZ:-Asia/Tokyo}
      - LANG=${LANG:-ja_JP.UTF-8}
      - LC_ALL=${LC_ALL:-ja_JP.UTF-8}
      - DEVICE=auto
      - COMPUTE_TYPE=auto
      # Numba cache configuration to fix caching issues
      - NUMBA_CACHE_DIR=/home/appuser/.numba
      - NUMBA_DISABLE_JIT=0
      - NUMBA_THREADING_LAYER=workqueue
    networks:
      - whisper-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis for caching and session storage
  redis:
    image: redis:7.2-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - whisper-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Prometheus for monitoring (optional)
  prometheus:
    image: prom/prometheus:v2.47.0
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - whisper-network
    profiles:
      - monitoring

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:10.2.0
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - whisper-network
    depends_on:
      - prometheus
    profiles:
      - monitoring

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  whisper-network:
    driver: bridge
